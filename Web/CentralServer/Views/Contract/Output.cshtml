@model Contracts.Models.Output

<div class="output" id="output">
    <br />
    <div class="form-group">
        <label class="control-label col-md-2">Lookup output ID</label>
        <div class="col-md-4">
            <select class="form-control dropdown olookupid-select" id="LookupInputId" name="LookupInputId"></select>
        </div>
        <button type="button" class="output-rem-btn btn btn-danger col-md-6"><i class="fas fa-times"></i></button>
    </div>
    <div class="form-group">
        <label class="control-label col-md-2">Output Key</label>
        <div class="col-md-4">
            <select class="form-control dropdown outputkey-select" id="Key" name="Key"></select>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Type,
                          new List<SelectListItem>() {
                    new SelectListItem()
                    {
                        Selected = true,
                        Text = "Integer",
                        Value = typeof(int).Name
                    },
                    new SelectListItem()
                    {
                        Text = "String",
                        Value = typeof(string).Name
                    },
                    new SelectListItem()
                    {
                        Text = "Boolean",
                        Value = typeof(bool).Name
                    }
                          },
                          new
                          {
                              @class = "form-control dropdown"
                          })
            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", placeholder = "Description of the output" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <hr />
</div>
